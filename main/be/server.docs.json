{
  "openapi": "3.0.0",
  "info": {
    "title": "SCOP3 API Documentation",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemas": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/scustomer": {
      "post": {
        "tags": ["S Customer"],
        "summary": "Create an S Customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string"
                  },
                  "plan_id": {
                    "type": "string"
                  },
                  "subscription_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created S Customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["S Customer"],
        "summary": "Retrieve an S Customer by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved S Customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/customer/init": {
      "post": {
        "tags": ["Customer"],
        "summary": "Initialize a customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully initialized customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/customer": {
      "post": {
        "tags": ["Customer"],
        "summary": "Create a new customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string"
                  },
                  "plan_id": {
                    "type": "string"
                  },
                  "subscription_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Customer"],
        "summary": "Update an existing customer by ID",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The customer ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plan_id": {
                    "type": "string"
                  },
                  "subscription_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Customer"],
        "summary": "Retrieve a customer by ID",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/customer/chargebee": {
      "get": {
        "tags": ["Customer"],
        "summary": "Retrieve a customer's Chargebee information by ID",
        "parameters": [
          {
            "in": "query",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Chargebee customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Chargebee information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/customer/auth0": {
      "put": {
        "tags": ["Customer"],
        "summary": "Update a customer's Auth0 information by user ID",
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user ID associated with the Auth0 account"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nickname": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated Auth0 information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/customer/auth0/image": {
      "put": {
        "tags": ["Customer"],
        "summary": "Update a customer's Auth0 image by user ID",
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user ID associated with the Auth0 account"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL of the new image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated Auth0 image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/client": {
      "post": {
        "tags": ["Client"],
        "summary": "Create a new legacy client organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cust_org_id": {
                    "type": "string",
                    "description": "Customer organization ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the client organization"
                  },
                  "industry": {
                    "type": "string",
                    "description": "Industry of the client organization"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of client organization"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number of the client organization"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created client organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Client"],
        "summary": "Update an existing legacy client organization",
        "description": "Update legacy client organization information using client_org_id in query and other attributes in body.",
        "parameters": [
          {
            "in": "query",
            "name": "client_org_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Client organization ID to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "industry", "type", "phone"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "industry": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated client organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client": {
                      "type": "object",
                      "properties": {
                        "client_org_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "industry": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["Client"],
        "summary": "Get legacy client organization by customer ID",
        "description": "Retrieve legacy client organizations associated with a given customer organization ID.",
        "parameters": [
          {
            "in": "query",
            "name": "cust_org_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Customer organization ID to fetch the related clients"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched client organizations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "client_org_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "industry": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/clients/menu": {
      "get": {
        "tags": ["Client"],
        "summary": "Get legacy client organization and locations menu format by customer ID",
        "description": "Retrieve legacy client organizations and their locations in a menu format based on the given customer organization ID.",
        "parameters": [
          {
            "in": "query",
            "name": "cust_org_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Customer organization ID to fetch the related clients and their menu format."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched client organizations and their locations in menu format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "client_org_id": {
                            "type": "string"
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "location_id": {
                                  "type": "string"
                                },
                                "menu": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/location": {
      "post": {
        "tags": ["Location"],
        "summary": "Create legacy client location",
        "description": "Create a new location for a legacy client organization.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_org_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created location",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Location"],
        "summary": "Update legacy client location",
        "description": "Updates a client location's information based on provided data.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the location"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["Location"],
        "summary": "Get legacy location by client ID",
        "description": "Fetches all locations for a specific client ID.",
        "parameters": [
          {
            "in": "query",
            "name": "client_org_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched locations"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/location/reset": {
      "post": {
        "tags": ["Location"],
        "summary": "Reset legacy client location uploaded database",
        "description": "Reset the uploaded database for a specified client location by ID and year.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "year": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully reset the uploaded database for the location"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/location/delete": {
      "post": {
        "tags": ["Location"],
        "summary": "Delete legacy client location uploaded database",
        "description": "Delete the uploaded database for a specified client location by ID.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the uploaded database for the location"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/expense/single": {
      "post": {
        "tags": ["Expense"],
        "summary": "Create legacy single expense",
        "description": "Creates a single expense based on query parameters.",
        "parameters": [
          {
            "in": "query",
            "name": "client_loc_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "payee",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "gl",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "amount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created expense"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/expense": {
      "get": {
        "tags": ["Expense"],
        "summary": "Get legacy expenses by location ID",
        "parameters": [
          {
            "in": "query",
            "name": "client_loc_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved expenses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Expense"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/expense/archive": {
      "put": {
        "tags": ["Expense"],
        "summary": "Archive legacy expenses by expense ID",
        "parameters": [
          {
            "in": "query",
            "name": "client_loc_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "archive",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully archived expense"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report": {
      "post": {
        "tags": ["Report"],
        "summary": "Generate legacy report by location ID",
        "parameters": [
          {
            "in": "query",
            "name": "client_loc_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generated report"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["Report"],
        "summary": "Get legacy report by location ID",
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "client_loc_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "qty_records",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_num",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved report"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/history": {
      "get": {
        "tags": ["History"],
        "summary": "Get all uploaded file history by location ID and year",
        "parameters": [
          {
            "in": "query",
            "name": "client_loc_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved history"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "tags": []
}
